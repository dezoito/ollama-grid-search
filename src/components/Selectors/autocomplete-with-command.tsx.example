import { useQuery } from "@tanstack/react-query";
import * as React from "react";
import { get_all_prompts } from "../queries";

import { IPrompt } from "@/Interfaces";
import {
  Command,
  CommandEmpty,
  CommandGroup,
  CommandInput,
  CommandItem,
  CommandList,
} from "../ui/command";

export interface IProps {
  trigger: boolean;
  index: number;
  inputText?: string;
  onSelect: (value: string) => void;
}

export function Autocomplete({
  trigger,
  index,
  inputText = "",
  onSelect,
}: IProps) {
  const [filteredPrompts, setFilteredPrompts] = React.useState<IPrompt[]>([]);
  const commandRef = React.useRef<HTMLDivElement>(null);

  const promptQuery = useQuery<IPrompt[]>({
    queryKey: ["get_all_prompts"],
    queryFn: (): Promise<IPrompt[]> => get_all_prompts(),
    refetchInterval: 1000 * 30 * 1,
    refetchOnWindowFocus: "always",
    staleTime: 0,
  });

  React.useEffect(() => {
    if (trigger && promptQuery.data) {
      const filterText = inputText.slice(1).toLowerCase();
      const filtered = promptQuery.data.filter((prompt) =>
        prompt.slug.toLowerCase().startsWith(filterText),
      );
      setFilteredPrompts(filtered);

      // Focus the command menu when it appears
      if (filtered.length > 0) {
        setTimeout(() => {
          commandRef.current?.focus();
        }, 0);
      }
    } else {
      setFilteredPrompts([]);
    }
  }, [trigger, promptQuery.data, inputText]);

  if (promptQuery.isLoading) {
    return <></>;
  }

  return (
    <div className="relative" id={`autocomplete-${index}`}>
      {filteredPrompts.length > 0 && (
        <Command ref={commandRef} className="focus:outline-none">
          <CommandInput className="h-9" placeholder="Filter" />
          <CommandEmpty>No prompts found.</CommandEmpty>
          <CommandList>
            <CommandGroup>
              {filteredPrompts.map((prompt) => (
                <CommandItem
                  key={prompt.uuid}
                  value={prompt.slug}
                  onSelect={() => onSelect(prompt.prompt)}
                  className="flex flex-col items-start py-2"
                >
                  <span className="text-base font-bold">{`/${prompt.slug}`}</span>
                  <span className="mt-1 text-sm text-gray-500">
                    {prompt.name}
                  </span>
                </CommandItem>
              ))}
            </CommandGroup>
          </CommandList>
        </Command>
      )}
    </div>
  );
}

export default Autocomplete;
